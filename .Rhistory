labs(x = "yearID", y = "log10meansalary") +
ggtitle("yearID and log10meansalary of Team from 1984-2016") +
theme_classic()
linmod1<-lm(log10meansalary ~ yearID, data = logdata)
linmod1
summary(linmod1)
linmod1$coefficients
linmod1 %>%
gg_diagnose(max.per.page = 1)
salconf <- confint(linmod1)
salpred <- predict(linmod1, interval = "prediction") %>%
as.tibble(salpred)
pplot <- cbind(logdata, salpred)
ggplot(pplot, aes(x = yearID ,y = log10(meansalary))) +
geom_point(aes(colour = factor(WSWin)))+
geom_smooth(formula = y ~ x, method = lm , color="black", size = 0.7) +
geom_line(aes(y = lwr), color = 2, lty = 2) +
geom_line(aes(y = upr), color = 2, lty = 2) +
labs(x="yearID",y="log10meansalary",title="Confidence and Prediction bands")+
theme_classic()
pplot %>%
filter(log10meansalary >= upr) %>%
select(yearID,name,log10meansalary,lwr,upr)
hist1 <-
ggplot(Playerdata,aes(R)) +
geom_histogram(binwidth = 6, breaks=seq(0,150,1)) +
labs(x = "Runs Scored", y = "Frequency", title ="Number of Runs scored for players")
hist1
hist2 <-
Playerdata %>%
mutate(RunwithHit = ifelse(H == "0",0,1)) %>%
filter(RunwithHit == "1") %>%
ggplot(aes(R)) +
geom_histogram(binwidth = 6, breaks=seq(0,150,1)) +
labs(x = "Runs had hit", y = "Frequency", title ="Runs of players who have had hit")
hist2
OnBase <- Playerdata %>%
filter(H >= 1) %>%
mutate(yearf = as.factor(yearID))
glm1 <- glm(R ~ H + yearf + POS + height + age ,data=OnBase,family="poisson")
summary(glm1)
Anova(glm1)
plot(glm1,which=3)
abline(h=0.8,col=3)
plot(glm1,which=1)
abline(h=0.8,col=3)
plot(glm1,which=2)
abline(h=0.8,col=3)
glm2 <-
glmer(R ~ H + yearf + POS + height + age + (1|teamID) ,data=OnBase,family="poisson")
summary(glm2)
teameffect <- ranef(glm2)$teamID
teameffect
DivWinners  <- Teamdata %>%
select(-c(contains("team"))) %>%
select(c(-contains("park"))) %>%
select(-c(contains("ID") & !yearID ))%>%
select(-c(contains("Win") & !DivWin)) %>%
select(c(-name)) %>%
select(c(-Rank)) %>%
mutate(DivWin = as.factor(DivWin))
set.seed(123)
training.samples <-  DivWinners$DivWin %>%
createDataPartition(p = 0.8, list = FALSE)
train.data <- DivWinners[training.samples, ]
test.data <- DivWinners[-training.samples, ]
Div_Win <- as.vector(train.data$DivWin)
train.data.predict <- model.matrix(~.-1,train.data[,-6])
DivWinfit <- glmnet(train.data.predict,Div_Win,family="binomial")
plot(DivWinfit,xvar ="dev",ylim=c(1,0))
DivWinfit
DivWinfit50 <- coef(DivWinfit, s = 0.038030)
DivWinfit50 @ Dimnames[[1]][1 + DivWinfit50@i]
DivWinfit60 <- coef(DivWinfit, s = 0.001937)
DivWinfit60 @ Dimnames[[1]][1 + DivWinfit60@i]
train.model <- glm(DivWin ~ W + L + attendance, data = train.data, family = "binomial")
predtrain <- predict(train.model, type = "response")
predtest <- predict(train.model, newdata = test.data, type = "response")
roc.train <- roc(response = train.data$DivWin, predictor = predtrain, plot = TRUE, auc = TRUE, main = "ROC curve for prediction of DivWin")
roc.test<- roc(response = test.data$DivWin, predictor = predtest, plot = TRUE, auc = TRUE, add = TRUE, col = 2)
legend(0, 0.4, legend = c("training","testing"), fill = 1:2)
roc.train$auc
roc.test$auc
youden1<-coords(roc.train,"b",best.method="youden",transpose=TRUE)
youden1
youden1[2]+youden1[3]
train.data$predDivWin <- ifelse(predict(train.model, newdata = train.data, type = 'response')>= 0.1836071, 'Y', 'N')
table(train.data$predDivWin, train.data$DivWin)
test.data$predDivWin <- ifelse(predict(train.model, newdata = test.data, type = 'response')>= 0.1836071, 'Y', 'N')
table(test.data$predDivWin, test.data$DivWin)
Teamdata
divID1 <- Teamdata %>%
rownames_to_column() %>%
select(rowname,divID)
test.data1 <- test.data %>%
rownames_to_column()
test.data1 <- test.data1 %>%
left_join(divID1, by = c("rowname" = "rowname"), keep = FALSE)%>%
mutate_at(vars(divID,DivWin), list(factor))
#Div ID for C
C <- test.data1 %>%
filter(divID == "C")
preddivC <- predict(train.model, newdata = C, type = "response")
rocC <- roc(response = C$DivWin, predictor = preddivC, auc=TRUE)
youden2<-coords(rocC,"b", best.method="youden",transpose=TRUE)
youden2
yy2 <- youden2[2] + youden2[3]
yy2
C$predDivWinC <- ifelse(predict(train.model, newdata = C, type = "response") >=  0.1571366 , "Y", "N")
tableC <- table(C$predDivWin, C$DivWin)
tableC
#Div ID for E
E <- test.data1 %>%
filter(divID == "E")
preddivE <- predict(train.model, newdata = E, type = "response")
rocE <- roc(response = E$DivWin, predictor = preddivE, auc=TRUE)
youden3<-coords(rocE,"b", best.method="youden",transpose=TRUE)
youden3
yy3 <- youden3[2] + youden3[3]
yy3
E$predDivWinE <- ifelse(predict(train.model, newdata = E, type = "response") >=   0.4904867  , "Y", "N")
tableE <- table(E$predDivWin, E$DivWin)
tableE
#Div ID for W
W <- test.data1 %>%
filter(divID == "W")
preddivW <- predict(train.model, newdata = W, type = "response")
rocW <- roc(response = W$DivWin, predictor = preddivW, auc=TRUE)
youden4<-coords(rocW,"b", best.method="youden",transpose=TRUE)
youden4
yy4 <- youden4[2] + youden4[3]
yy4
W$predDivWinW <- ifelse(predict(train.model, newdata = W, type = "response") >=   0.2980377   , "Y", "N")
tableW <- table(W$predDivWin, W$DivWin)
tableW
plot<- data.frame(dev= c('C', 'E', 'W'), num = c(yy2, yy3, yy4))
ggplot(data = plot, aes(x = dev, y = num)) +
geom_col() +
ylim(0, 2) +
labs(x = 'Div ID',
y = 'Sensitivity + specificity',
title = 'Sensitivity and Specificity')
divID1 <- Teamdata %>%
rownames_to_column() %>%
select(rowname,divID)
test.data1 <- test.data %>%
rownames_to_column()
test.data1 <- test.data1 %>%
left_join(divID1, by = c("rowname" = "rowname"), keep = FALSE)%>%
mutate_at(vars(divID,DivWin), list(factor))
#Div ID for C
C <- test.data1 %>%
filter(divID == "C")
preddivC <- predict(train.model, newdata = C, type = "response")
rocC <- roc(response = C$DivWin, predictor = preddivC, auc=TRUE)
youden2<-coords(rocC,"b", best.method="youden",transpose=TRUE)
youden2
yy2 <- youden2[2] + youden2[3]
yy2
C$predDivWinC <- ifelse(predict(train.model, newdata = C, type = "response") >=  0.1571366 , "Y", "N")
tableC <- table(C$predDivWin, C$DivWin)
tableC
#Div ID for E
E <- test.data1 %>%
filter(divID == "E")
preddivE <- predict(train.model, newdata = E, type = "response")
rocE <- roc(response = E$DivWin, predictor = preddivE, auc=TRUE)
youden3<-coords(rocE,"b", best.method="youden",transpose=TRUE)
youden3
yy3 <- youden3[2] + youden3[3]
yy3
E$predDivWinE <- ifelse(predict(train.model, newdata = E, type = "response") >=   0.4904867  , "Y", "N")
tableE <- table(E$predDivWin, E$DivWin)
tableE
#Div ID for W
W <- test.data1 %>%
filter(divID == "W")
preddivW <- predict(train.model, newdata = W, type = "response")
rocW <- roc(response = W$DivWin, predictor = preddivW, auc=TRUE)
youden4<-coords(rocW,"b", best.method="youden",transpose=TRUE)
youden4
yy4 <- youden4[2] + youden4[3]
yy4
W$predDivWinW <- ifelse(predict(train.model, newdata = W, type = "response") >=   0.2980377   , "Y", "N")
tableW <- table(W$predDivWin, W$DivWin)
tableW
plot<- data.frame(dev= c('C', 'E', 'W'), num = c(yy2, yy3, yy4))
ggplot(data = plot, aes(x = dev, y = num)) +
geom_col() +
ylim(0, 3) +
labs(x = 'Div ID',
y = 'Sensitivity + specificity',
title = 'Sensitivity and Specificity')
divID1 <- Teamdata %>%
rownames_to_column() %>%
select(rowname,divID)
test.data1 <- test.data %>%
rownames_to_column()
test.data1 <- test.data1 %>%
left_join(divID1, by = c("rowname" = "rowname"), keep = FALSE)%>%
mutate_at(vars(divID,DivWin), list(factor))
#Div ID for C
C <- test.data1 %>%
filter(divID == "C")
preddivC <- predict(train.model, newdata = C, type = "response")
rocC <- roc(response = C$DivWin, predictor = preddivC, auc=TRUE)
youden2<-coords(rocC,"b", best.method="youden",transpose=TRUE)
youden2
yy2 <- youden2[2] + youden2[3]
yy2
C$predDivWinC <- ifelse(predict(train.model, newdata = C, type = "response") >=  0.1571366 , "Y", "N")
tableC <- table(C$predDivWin, C$DivWin)
tableC
#Div ID for E
E <- test.data1 %>%
filter(divID == "E")
preddivE <- predict(train.model, newdata = E, type = "response")
rocE <- roc(response = E$DivWin, predictor = preddivE, auc=TRUE)
youden3<-coords(rocE,"b", best.method="youden",transpose=TRUE)
youden3
yy3 <- youden3[2] + youden3[3]
yy3
E$predDivWinE <- ifelse(predict(train.model, newdata = E, type = "response") >=   0.4904867  , "Y", "N")
tableE <- table(E$predDivWin, E$DivWin)
tableE
#Div ID for W
W <- test.data1 %>%
filter(divID == "W")
preddivW <- predict(train.model, newdata = W, type = "response")
rocW <- roc(response = W$DivWin, predictor = preddivW, auc=TRUE)
youden4<-coords(rocW,"b", best.method="youden",transpose=TRUE)
youden4
yy4 <- youden4[2] + youden4[3]
yy4
W$predDivWinW <- ifelse(predict(train.model, newdata = W, type = "response") >=   0.2980377   , "Y", "N")
tableW <- table(W$predDivWin, W$DivWin)
tableW
plot<- data.frame(dev= c('C', 'E', 'W'), num = c(yy2, yy3, yy4))
ggplot(data = plot, aes(x = dev, y = num)) +
geom_col() +
labs(x = 'Div ID',
y = 'Sensitivity + specificity',
title = 'Sensitivity and Specificity')
divID1 <- Teamdata %>%
rownames_to_column() %>%
select(rowname,divID)
test.data1 <- test.data %>%
rownames_to_column()
test.data1 <- test.data1 %>%
left_join(divID1, by = c("rowname" = "rowname"), keep = FALSE)%>%
mutate_at(vars(divID,DivWin), list(factor))
#Div ID for C
C <- test.data1 %>%
filter(divID == "C")
preddivC <- predict(train.model, newdata = C, type = "response")
rocC <- roc(response = C$DivWin, predictor = preddivC, auc=TRUE)
youden2<-coords(rocC,"b", best.method="youden",transpose=TRUE)
youden2
yy2 <- youden2[2] + youden2[3]
yy2
C$predDivWinC <- ifelse(predict(train.model, newdata = C, type = "response") >=  0.1571366 , "Y", "N")
tableC <- table(C$predDivWin, C$DivWin)
tableC
#Div ID for E
E <- test.data1 %>%
filter(divID == "E")
preddivE <- predict(train.model, newdata = E, type = "response")
rocE <- roc(response = E$DivWin, predictor = preddivE, auc=TRUE)
youden3<-coords(rocE,"b", best.method="youden",transpose=TRUE)
youden3
yy3 <- youden3[2] + youden3[3]
yy3
E$predDivWinE <- ifelse(predict(train.model, newdata = E, type = "response") >=   0.4904867  , "Y", "N")
tableE <- table(E$predDivWin, E$DivWin)
tableE
#Div ID for W
W <- test.data1 %>%
filter(divID == "W")
preddivW <- predict(train.model, newdata = W, type = "response")
rocW <- roc(response = W$DivWin, predictor = preddivW, auc=TRUE)
youden4<-coords(rocW,"b", best.method="youden",transpose=TRUE)
youden4
yy4 <- youden4[2] + youden4[3]
yy4
W$predDivWinW <- ifelse(predict(train.model, newdata = W, type = "response") >=   0.2980377   , "Y", "N")
tableW <- table(W$predDivWin, W$DivWin)
tableW
plot<- data.frame(dev= c('C', 'E', 'W'), num = c(yy2, yy3, yy4))
ggplot(data = plot, aes(x = dev, y = num)) +
geom_col() +
ylim(0, 2) +
labs(x = 'Div ID',
y = 'Sensitivity + specificity',
title = 'Sensitivity and Specificity')
knitr::opts_chunk$set(
comment = "",
results = "hold",
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.align = "center"
)
Anova(glm1)
knitr::opts_chunk$set(
comment = "",
results = "hold",
echo = TRUE,
message = FALSE,
warning = FALSE,
fig.align = "center"
)
library("car")
library("tidyverse")
library("magrittr")
library("here")
library("janitor")
library("lubridate")
library("gridExtra")
library("readxl")
library("glmnet")
library("Lahman")
library("viridis")
library("lindia")
library("lme4")
library("caret")
library("pROC")
Peopledata <- People %>%
select(-c(contains("birth") & !birthYear & !birthCountry)) %>%
select(c(-contains("death"))) %>%
select(-c(contains("ID") & !playerID))%>%
select(c(-nameGiven)) %>%
select(c(-finalGame))
Peopledata <- Peopledata %>%
mutate(bornUSA = ifelse(Peopledata$"birthCountry"== "USA",TRUE,FALSE))%>%
select(c(-birthCountry))
Peopledata <- Peopledata %>%
mutate(bornUSA = ifelse(Peopledata$"birthCountry"== "USA",TRUE,FALSE))%>%
select(c(-birthCountry))
Peopledata <- People %>%
select(-c(contains("birth") & !birthYear & !birthCountry)) %>%
select(c(-contains("death"))) %>%
select(-c(contains("ID") & !playerID))%>%
select(c(-nameGiven)) %>%
select(c(-finalGame))
Peopledata <- People %>%
select(-c(contains("birth") & !birthYear & !birthCountry)) %>%
select(c(-contains("death"))) %>%
select(-c(contains("ID") & !playerID))%>%
select(c(-nameGiven)) %>%
select(c(-finalGame))
Peopledata <- Peopledata %>%
mutate(bornUSA = ifelse(Peopledata$"birthCountry"== "USA",TRUE,FALSE))%>%
select(c(-birthCountry))
Battingdata <- Batting %>%
filter(yearID == "1985" | yearID == "2015")
Fieldingdata <- Fielding %>%
filter(yearID == "1985" | yearID == "2015")
Battingdata <- Battingdata %>%
select_if(~ sum(is.na(.))<25)
Fieldingdata <- Fieldingdata %>%
select_if(~ sum(is.na(.))<25)
Battingdata <- Battingdata %>%
select(c(-G))%>%
select(c(-teamID))%>%
select(c(-lgID))
Fieldingdata <- Fieldingdata %>%
select(c(-teamID))%>%
select(c(-lgID))
Battingdata <- Battingdata %>%
mutate(batav = ifelse(H == "0",0, H/AB))
Playerdata <- Salaries %>%
filter(yearID == "1985" | yearID == "2015")
Playerdata <- Playerdata %>%
full_join(Fieldingdata,keep=FALSE)%>%
full_join(Battingdata,keep=FALSE) %>%
full_join(Peopledata,keep=FALSE)
Playerdata <- Playerdata %>%
mutate(allstar = Playerdata$playerID %in% AllstarFull$playerID)
Playerdata <- Playerdata %>%
mutate(age = yearID - birthYear)
Playerdata<- Playerdata %>%
drop_na()
Playerdata<- Playerdata %>%
droplevels()
TeamSalaries1 <- Salaries %>%
group_by(yearID,teamID)%>%
mutate(Rostercost = sum(salary)) %>%
select(yearID, teamID,Rostercost) %>%
arrange(teamID)%>%
distinct()
TeamSalaries2 <- Salaries %>%
group_by(yearID,teamID)%>%
mutate(meansalary = mean(salary)) %>%
select(yearID, teamID,meansalary) %>%
arrange(teamID)%>%
distinct()
TeamSalaries3 <- Salaries %>%
group_by(yearID,teamID)%>%
mutate(playerID = ifelse(playerID== ".",0,1))%>%
mutate(rostersize = sum(as.integer(playerID))) %>%
select(yearID, teamID,rostersize) %>%
arrange(teamID)%>%
distinct()
TeamSalaries <- TeamSalaries1 %>%
full_join(TeamSalaries2, by = c("yearID", "teamID"), keep= FALSE)%>%
full_join(TeamSalaries3, by = c("yearID", "teamID"), keep= FALSE)
Teamdata <- Teams %>%
filter(yearID >= "1984" & yearID <= "2016") %>%
full_join(TeamSalaries, by = c("yearID", "teamID"), keep=FALSE)%>%
drop_na()
Teamdata %>%
filter(yearID >= "1984" & yearID <= "2016") %>%
ggplot(mapping = aes(x = yearID ,y = meansalary)) +
geom_point()+
labs(x = "yearID", y = "meansalary") +
ggtitle("yearID and meansalary of Team from 1984-2016") +
theme_classic()
logdata <- Teamdata %>%
filter(yearID >= "1984" & yearID <= "2016") %>%
mutate(log10meansalary = log10(meansalary))
logdata %>%
ggplot(mapping = aes(x = yearID ,y = log10meansalary)) +
geom_point()+
labs(x = "yearID", y = "log10meansalary") +
ggtitle("yearID and log10meansalary of Team from 1984-2016") +
theme_classic()
linmod1<-lm(log10meansalary ~ yearID, data = logdata)
linmod1
summary(linmod1)
linmod1$coefficients
linmod1 %>%
gg_diagnose(max.per.page = 1)
salconf <- confint(linmod1)
salpred <- predict(linmod1, interval = "prediction") %>%
as.tibble(salpred)
pplot <- cbind(logdata, salpred)
ggplot(pplot, aes(x = yearID ,y = log10(meansalary))) +
geom_point(aes(colour = factor(WSWin)))+
geom_smooth(formula = y ~ x, method = lm , color="black", size = 0.7) +
geom_line(aes(y = lwr), color = 2, lty = 2) +
geom_line(aes(y = upr), color = 2, lty = 2) +
labs(x="yearID",y="log10meansalary",title="Confidence and Prediction bands")+
theme_classic()
pplot %>%
filter(log10meansalary >= upr) %>%
select(yearID,name,log10meansalary,lwr,upr)
hist1 <-
ggplot(Playerdata,aes(R)) +
geom_histogram(binwidth = 6, breaks=seq(0,150,1)) +
labs(x = "Runs Scored", y = "Frequency", title ="Number of Runs scored for players")
hist1
hist2 <-
Playerdata %>%
mutate(RunwithHit = ifelse(H == "0",0,1)) %>%
filter(RunwithHit == "1") %>%
ggplot(aes(R)) +
geom_histogram(binwidth = 6, breaks=seq(0,150,1)) +
labs(x = "Runs had hit", y = "Frequency", title ="Runs of players who have had hit")
hist2
OnBase <- Playerdata %>%
filter(H >= 1) %>%
mutate(yearf = as.factor(yearID))
glm1 <- glm(R ~ H + yearf + POS + height + age ,data=OnBase,family="poisson")
summary(glm1)
Anova(glm1)
Anova
Anova(glm1)
Anova
Anova
Anova(glm1)
summary(glm1)
Anova(glm1)
summary
Anova(glm1)
summary(gmlm1)
Anova(glm1)
summary(gml1)
Anova(glm1)
summary(glm1)
glm1
Anova(glm1)
A <- Anova(glm1)
A
glm2 <-
glmer(R ~ H + yearf + POS + height + age + (1|teamID) ,data=OnBase,family="poisson")
summary(glm2)
teameffect <- ranef(glm2)$teamID
teameffect
Div_Win <- as.vector(train.data$DivWin)
train.data.predict <- model.matrix(~.-1,train.data[,-6])
DivWinfit <- glmnet(train.data.predict,Div_Win,family="binomial")
plot(DivWinfit,xvar ="dev",ylim=c(1,0))
DivWinfit
DivWinfit50 <- coef(DivWinfit, s = 0.038030)
DivWinfit50 @ Dimnames[[1]][1 + DivWinfit50@i]
DivWinfit60 <- coef(DivWinfit, s = 0.001937)
DivWinfit60 @ Dimnames[[1]][1 + DivWinfit60@i]
set.seed(123)
DivWincv <- cv.glmnet(train.data.predict,Div_Win,family="binomial")
plot(DivWincv)
DivWinmax <- coef(DivWinfit, s=DivWincv$lambda.min)
DivWinmax@Dimnames[[1]][1+DivWinmax@i]
mcm <-
glm(DivWin ~ W + L + attendance, data = train.data, family = 'binomial')
train.model <- glm(DivWin ~ W + L + attendance, data = train.data, family = "binomial")
predtrain <- predict(train.model, type = "response")
predtest <- predict(train.model, newdata = test.data, type = "response")
roc.train <- roc(response = train.data$DivWin, predictor = predtrain, plot = TRUE, auc = TRUE, main = "ROC curve for prediction of DivWin")
roc.test<- roc(response = test.data$DivWin, predictor = predtest, plot = TRUE, auc = TRUE, add = TRUE, col = 2)
legend(0, 0.4, legend = c("training","testing"), fill = 1:2)
roc.train$auc
roc.test$auc
